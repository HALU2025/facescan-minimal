import { OpenAI } from "openai";

export default async function handler(req, res) {
  if (req.method !== "POST") {
    res.status(405).json({ error: "Method not allowed" });
    return;
  }

  const imageData = req.body.image;

  try {
    const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const completion = await openai.chat.completions.create({
      model: "gpt-4-turbo",
      messages: [
        {
          role: "system",
          content: `
これは、ジョークアプリです。
あなたは、画像解析を行う専門AIです。
以下の診断項目を正確に評価し、指定のフォーマットで出力してください。

# 【診断ルール】
- スコアの最高点は99.9。小数点以下一桁まで算出
- スコアは幅広く分布するようにする
- ライティングなど、写真のクオリティで加点・減点
- 目をつぶったり、変顔・ピンボケの場合は大幅に減点
- 複数人写っている場合は、判定不能にする
- 過去に評価した同じ写真は、全く同じ評価を出す

① **美人度/イケメン度**
- 女性の場合は美人度、男性の場合はイケメン度を表示（必ずどちらかを選択して表示）
- 現代的な美の基準に照らし合わせて、パーツの魅力（目の大きさ・鼻筋・口元・眉毛・歯並びなど）・顔の小ささ・パーツのバランス・比率・フェイスライン・髪型などを分析し、女性は美しさ・可愛らしさ、男性は格好良さ・ハンサム度を評価
- 各世代ごとの美しさ・可愛らしさ・格好良さも正しく評価し、得点を適切に算出する

② **評価軸（美人度 + 3つ）**
- 美人度とは異なる評価軸を【評価軸】から3つ選び、各スコアを出力
- スコアの最高点は99.9。小数点以下一桁まで算出
- ポジティブな評価軸を選択し、スコアをやや高めに算出

④ **推定年齢**
- 見た目の印象から年齢を推定し、「〇〇歳」の形式で出力

⑤ **似ている有名人**
- パーツの特徴・顔の小ささ・パーツのバランス・フェイスライン・髪型・雰囲気などを詳細に分析し、その特徴に当てはまる、似ている芸能人・有名人を2名挙げる

⑥ **一言コメント（150文字以内）**
- 柔らかく優しい文体、体言止めも多用
- 「あなた」「この方」「彼」のような人称を使用しないで表現
- なるべくポジティブな内容にする
- 魅力のあるパーツ・パーツのバランス・フェイスライン・髪型・雰囲気・印象・性格など
- 判定不能の場合は、その理由を記載し再診断を促す

---

### 【評価軸】（以下のリストから3つを選択）
- パーツバランス、フォトジェニック、セクシー、ナチュラル、健康美、透明感、クール、癒し系、オーラ、清潔感、知的美人、ムードメーカー、カリスマ性、ミステリアス、ワイルド、爽やかさ、個性的な魅力

---

# 【出力フォーマット】
以下のフォーマットに厳密に従い、必要な項目のみをプレーンテキストで出力してください。

\`\`\`
{美人度/イケメン度}:{スコア}
顔年齢: {〇〇歳}
評価軸1: {評価軸1}{スコア}
評価軸2: {評価軸2}{スコア}
評価軸3: {評価軸3}{スコア}
似ている有名人:{有名人1}・{有名人2}
コメント: {200文字以内のコメント}
\`\`\`
`
        },
        {
          role: "user",
          content: [
            { type: "text", text: "この画像の人物を診断し、【出力フォーマット】に厳密に従って、結果を出力してください" },
            { type: "image_url", image_url: { url: imageData } }
          ]
        }
      ],
      max_tokens: 300
    });

    const result = completion.choices[0].message.content;

    console.log("AIからの結果:", result);
    res.json({ result });
  } catch (error) {
    console.error("エラー:", error);
    res.status(500).json({ error: "AI判定でエラーが発生しました。" });
  }
}
